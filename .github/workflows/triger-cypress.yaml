name: run cypress test

on:
  workflow_dispatch:

jobs:
  runcy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # - name: trigger cypress test
      #   run: |
      #     # gh api \
      #     # -H "Accept: application/vnd.github+json" \
      #     # -H "X-GitHub-Api-Version: 2022-11-28" \
      #     # /repos/unknownOrganization/cypress-ci-test/ray31245/actions/workflows
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      #     GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: list cypress test workflow
        run: |
          gh workflow -R unknownOrganization/cypress-ci-test list
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: wait for test success
        run: |
          export TRIGGERTIME=$(date +%s)
          gh workflow -R unknownOrganization/cypress-ci-test run integration.yaml -r main

          gh run -R unknownOrganization/cypress-ci-test --workflow integration.yaml --status="in_progress" --limit 1  list
          export RUN_INFO="null"
          export CREATETIME=0
          until [ "$RUN_INFO" != "null" ] && [ "$CREATETIME" -gt "$TRIGGERTIME" ]; do
            export RUN_INFO=$(gh run -R unknownOrganization/cypress-ci-test --workflow integration.yaml --status="in_progress" --limit 1  list --json name,conclusion,databaseId,workflowDatabaseId,createdAt,status | jq .[0])
            if [ "$RUN_INFO" != "null" ]; then 
              export CREATETIME=$(date -d "$(echo $RUN_INFO | jq -r .createdAt)" +%s)
            fi
            DURATION=$( (`date +%s` - $TRIGGERTIME) )
            if [ "$DURATION" -gt "36000" ]; then
              exit 1
            fi
          done
          echo $RUN_INFO
          echo $RUN_INFO | jq .
          echo $RUN_INFO | jq .databaseId
          echo $RUN_INFO | jq .createdAt
          echo $CREATETIME
          echo $TRIGGERTIME
          gh run -R unknownOrganization/cypress-ci-test --interval 30 --exit-status $(echo $RUN_INFO | jq .databaseId)  watch
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}